BOOK HUNTER

---------------------------------------------------------
I. LA DATABASE > Commit: Création et hydratation de la DB
---------------------------------------------------------
	1. Créer la structure de la DB 
		> png + mwb + sql
		> dans documents/db
	2. Intégrer la structure sur MySQL
	3. Intégrer des data avec ChatGPT
	4. Sauvegarde la DB et son contenu dans documents/db

----------------------------------------------------
II. LA STRUCTURE MCV > Commit: Structure MVC de base - 
1-Pas Fait | 2-Pas OK | 3-Fonctionnel | 4-OK
----------------------------------------------------
	Création de la structure complète de l'app MVC
	app, core, public, ...
	Copier/coller OK pour la connexion
		- app
			- config
				- params.php
			- controllers
			- models
			- routers
				- index.php
			- views
				- templates
					- index.php
		- core 
			- init.php
			- connexion.php

		- public
			- index.php
			- css
			- js

-------------------------------------------------------------------------------
III. LE TEMPLATE > Commit: Intégration et décomposition du template en partials
-------------------------------------------------------------------------------
	1. Intégrer le template
	2. Placer les zones dynamiques (title et content)
	3. Décomposer en partials

-------------------------------------------------------------------------------
IV. LA ROUTE PAR DÉFAUT > Commit: Route par défaut: pages.home
-------------------------------------------------------------------------------
	PATTERN: /
	CTRL: pagesController
	ACTION: home
	VIEW: pages/home.php

		PageController.php
			> homeAction
				- $books -> booksModel -> findAllPopulars (GROUP BY)
				- $authors -> authorsModel -> findAllPopulars (GROUP BY)
			> pages/home.php
				> books/_index.php
				> authors/_index.php 

	ATTENTION: 
		Pour les tags: 
		Dans le foreach de books/_index.php
		Faire appel à la fonction findAllByBookId(xxx) du tagsModel -> $tags
		et inclure la vue tags/_index.php et y faire un foreach sur $tags

-------------------------------------------------------------------------------
V. ROUTE DE LA LISTE DES BOOKS > Commit: Route books.index
-------------------------------------------------------------------------------
	PATTERN: /?books=index
	CTRL: booksController
	ACTION: index
	VIEW: books/index.php
		> Fait appel à books/_index.php
		> Créer un router 'books' avec un switch !
		> Ceci est le default


		./app/routers/index.php
			if (isset($_GET['books'])) :
				include_once '../app/routers/books.php'
			else:
				// route par défaut...
			endif;

		./app/routers/books.php
			use \App\Controller\BookController;
			include_once '../app/controllers/booksController.php';

			switch ($_GET['books']):
				case: 'index':
					BookController\indexAction($connexion);
			endswitch;

-------------------------------------------------------------------------------
VI. ROUTE DE LA LISTE DES AUTHORS > Commit: Route authors.index
-------------------------------------------------------------------------------
	PATTERN: /?authors=index
	CTRL: authorsController
	ACTION: index
	VIEW: authors/index.php
		> Fait appel à authors/_index.php
		> Créer un router 'authors' avec un switch !
		> Ceci est le default

-------------------------------------------------------------------------------
VII. ROUTE DU DÉTAIL D'UN BOOK > Commit: Route books.show
-------------------------------------------------------------------------------
	PATTERN: /?books=show&id=x
	CTRL: booksController
	ACTION: show
	VIEW: books/show.php
		> Nouveau case dans le switch du router 'books'

-------------------------------------------------------------------------------
VIII. ROUTE DU DÉTAIL D'UN AUTHOR > Commit: Route authors.show
-------------------------------------------------------------------------------
	PATTERN: /?authors=show&id=x
	CTRL: authorsController
	ACTION: show
	VIEW: authors/show.php
		> Nouveau case dans le switch du router 'authors'

		Faire appel à la fonction findAllByAuthorId()
		et à la vue: books._indexByAuthorId (ou directement faire un foreach sur le résultat de la fonction)


-------------------------------------------------------------------------------
IX. TEMPLATE - CATÉGORIES > Commit: Ajout des catégories dans le aside
-------------------------------------------------------------------------------
	Faire appel à categories/_index.php


-------------------------------------------------------------------------------
X. ROUTE DU DÉTAIL D'UNE CATÉGORIE > Commit: Route categories.show
-------------------------------------------------------------------------------
	PATTERN: /?categories=show&id=x
	CTRL: categoriesController
	ACTION: show
	VIEW: categories/show.php
		> Nouveau case dans le switch du router 'categories'

-------------------------------------------------------------------------------
XI. TEMPLATE - TAGS > Commit: Ajout des tags dans le aside
-------------------------------------------------------------------------------
	Faire appel à tags/_index.php


-------------------------------------------------------------------------------
XII. ROUTE DU DÉTAIL D'UN TAG > Commit: Route tags.show
-------------------------------------------------------------------------------
	PATTERN: /?tags=show&id=x
	CTRL: tagsController
	ACTION: show
	VIEW: tags/show.php
		> Nouveau case dans le switch du router 'tags'

-------------------------------------------------------------------------------
XIII. ROUTE AJOUT À MA COLLECTION > Commit: Route collections.create
-------------------------------------------------------------------------------
	PATTERN: /?collections=create
	CTRL: collectionsController
	ACTION: create
	REDIRECT: books/show.php avec un message dans la session	
		> Le livre a bien été ajouté à votre collection








